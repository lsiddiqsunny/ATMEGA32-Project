
Sendmssg.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000932  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000084  00800060  00000932  000009c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000027  008000e4  008000e4  00000a4a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a4a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a7c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d5e  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f7  00000000  00000000  000028ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d27  00000000  00000000  00002fe5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e4  00000000  00000000  00003d0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ad  00000000  00000000  00003ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001010  00000000  00000000  0000439d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000053ad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e3       	ldi	r30, 0x32	; 50
  68:	f9 e0       	ldi	r31, 0x09	; 9
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 3e       	cpi	r26, 0xE4	; 228
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	a4 ee       	ldi	r26, 0xE4	; 228
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ab 30       	cpi	r26, 0x0B	; 11
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 cf 02 	call	0x59e	; 0x59e <main>
  8a:	0c 94 97 04 	jmp	0x92e	; 0x92e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <pinChange>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <pinChange+0x6>
  96:	9f c0       	rjmp	.+318    	; 0x1d6 <pinChange+0x144>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	11 f4       	brne	.+4      	; 0xa0 <pinChange+0xe>
  9c:	d8 98       	cbi	0x1b, 0	; 27
  9e:	08 95       	ret
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <pinChange+0x18>
  a6:	d9 98       	cbi	0x1b, 1	; 27
  a8:	08 95       	ret
  aa:	82 30       	cpi	r24, 0x02	; 2
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <pinChange+0x22>
  b0:	da 98       	cbi	0x1b, 2	; 27
  b2:	08 95       	ret
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <pinChange+0x2c>
  ba:	db 98       	cbi	0x1b, 3	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <pinChange+0x36>
  c4:	dc 98       	cbi	0x1b, 4	; 27
  c6:	08 95       	ret
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <pinChange+0x40>
  ce:	dd 98       	cbi	0x1b, 5	; 27
  d0:	08 95       	ret
  d2:	86 30       	cpi	r24, 0x06	; 6
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <pinChange+0x4a>
  d8:	de 98       	cbi	0x1b, 6	; 27
  da:	08 95       	ret
  dc:	87 30       	cpi	r24, 0x07	; 7
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <pinChange+0x54>
  e2:	df 98       	cbi	0x1b, 7	; 27
  e4:	08 95       	ret
  e6:	8a 30       	cpi	r24, 0x0A	; 10
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <pinChange+0x5e>
  ec:	c0 98       	cbi	0x18, 0	; 24
  ee:	08 95       	ret
  f0:	8b 30       	cpi	r24, 0x0B	; 11
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <pinChange+0x68>
  f6:	c1 98       	cbi	0x18, 1	; 24
  f8:	08 95       	ret
  fa:	8c 30       	cpi	r24, 0x0C	; 12
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <pinChange+0x72>
 100:	c2 98       	cbi	0x18, 2	; 24
 102:	08 95       	ret
 104:	8d 30       	cpi	r24, 0x0D	; 13
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <pinChange+0x7c>
 10a:	c3 98       	cbi	0x18, 3	; 24
 10c:	08 95       	ret
 10e:	8e 30       	cpi	r24, 0x0E	; 14
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <pinChange+0x86>
 114:	c4 98       	cbi	0x18, 4	; 24
 116:	08 95       	ret
 118:	8f 30       	cpi	r24, 0x0F	; 15
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <pinChange+0x90>
 11e:	c5 98       	cbi	0x18, 5	; 24
 120:	08 95       	ret
 122:	80 31       	cpi	r24, 0x10	; 16
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <pinChange+0x9a>
 128:	c6 98       	cbi	0x18, 6	; 24
 12a:	08 95       	ret
 12c:	81 31       	cpi	r24, 0x11	; 17
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <pinChange+0xa4>
 132:	c7 98       	cbi	0x18, 7	; 24
 134:	08 95       	ret
 136:	84 31       	cpi	r24, 0x14	; 20
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <pinChange+0xae>
 13c:	a8 98       	cbi	0x15, 0	; 21
 13e:	08 95       	ret
 140:	85 31       	cpi	r24, 0x15	; 21
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <pinChange+0xb8>
 146:	a9 98       	cbi	0x15, 1	; 21
 148:	08 95       	ret
 14a:	86 31       	cpi	r24, 0x16	; 22
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <pinChange+0xc2>
 150:	aa 98       	cbi	0x15, 2	; 21
 152:	08 95       	ret
 154:	87 31       	cpi	r24, 0x17	; 23
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <pinChange+0xcc>
 15a:	ab 98       	cbi	0x15, 3	; 21
 15c:	08 95       	ret
 15e:	88 31       	cpi	r24, 0x18	; 24
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <pinChange+0xd6>
 164:	ac 98       	cbi	0x15, 4	; 21
 166:	08 95       	ret
 168:	89 31       	cpi	r24, 0x19	; 25
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <pinChange+0xe0>
 16e:	ad 98       	cbi	0x15, 5	; 21
 170:	08 95       	ret
 172:	8a 31       	cpi	r24, 0x1A	; 26
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <pinChange+0xea>
 178:	ae 98       	cbi	0x15, 6	; 21
 17a:	08 95       	ret
 17c:	8b 31       	cpi	r24, 0x1B	; 27
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <pinChange+0xf4>
 182:	af 98       	cbi	0x15, 7	; 21
 184:	08 95       	ret
 186:	8e 31       	cpi	r24, 0x1E	; 30
 188:	91 05       	cpc	r25, r1
 18a:	11 f4       	brne	.+4      	; 0x190 <pinChange+0xfe>
 18c:	90 98       	cbi	0x12, 0	; 18
 18e:	08 95       	ret
 190:	8f 31       	cpi	r24, 0x1F	; 31
 192:	91 05       	cpc	r25, r1
 194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0x108>
 196:	91 98       	cbi	0x12, 1	; 18
 198:	08 95       	ret
 19a:	80 32       	cpi	r24, 0x20	; 32
 19c:	91 05       	cpc	r25, r1
 19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x112>
 1a0:	92 98       	cbi	0x12, 2	; 18
 1a2:	08 95       	ret
 1a4:	81 32       	cpi	r24, 0x21	; 33
 1a6:	91 05       	cpc	r25, r1
 1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x11c>
 1aa:	93 98       	cbi	0x12, 3	; 18
 1ac:	08 95       	ret
 1ae:	82 32       	cpi	r24, 0x22	; 34
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x126>
 1b4:	94 98       	cbi	0x12, 4	; 18
 1b6:	08 95       	ret
 1b8:	83 32       	cpi	r24, 0x23	; 35
 1ba:	91 05       	cpc	r25, r1
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x130>
 1be:	95 98       	cbi	0x12, 5	; 18
 1c0:	08 95       	ret
 1c2:	84 32       	cpi	r24, 0x24	; 36
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x13a>
 1c8:	96 98       	cbi	0x12, 6	; 18
 1ca:	08 95       	ret
 1cc:	85 97       	sbiw	r24, 0x25	; 37
 1ce:	09 f0       	breq	.+2      	; 0x1d2 <pinChange+0x140>
 1d0:	9f c0       	rjmp	.+318    	; 0x310 <pinChange+0x27e>
 1d2:	97 98       	cbi	0x12, 7	; 18
 1d4:	08 95       	ret
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	11 f4       	brne	.+4      	; 0x1de <pinChange+0x14c>
 1da:	d8 9a       	sbi	0x1b, 0	; 27
 1dc:	08 95       	ret
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 05       	cpc	r25, r1
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <pinChange+0x156>
 1e4:	d9 9a       	sbi	0x1b, 1	; 27
 1e6:	08 95       	ret
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	91 05       	cpc	r25, r1
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <pinChange+0x160>
 1ee:	da 9a       	sbi	0x1b, 2	; 27
 1f0:	08 95       	ret
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	91 05       	cpc	r25, r1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <pinChange+0x16a>
 1f8:	db 9a       	sbi	0x1b, 3	; 27
 1fa:	08 95       	ret
 1fc:	84 30       	cpi	r24, 0x04	; 4
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <pinChange+0x174>
 202:	dc 9a       	sbi	0x1b, 4	; 27
 204:	08 95       	ret
 206:	85 30       	cpi	r24, 0x05	; 5
 208:	91 05       	cpc	r25, r1
 20a:	11 f4       	brne	.+4      	; 0x210 <pinChange+0x17e>
 20c:	dd 9a       	sbi	0x1b, 5	; 27
 20e:	08 95       	ret
 210:	86 30       	cpi	r24, 0x06	; 6
 212:	91 05       	cpc	r25, r1
 214:	11 f4       	brne	.+4      	; 0x21a <pinChange+0x188>
 216:	de 9a       	sbi	0x1b, 6	; 27
 218:	08 95       	ret
 21a:	87 30       	cpi	r24, 0x07	; 7
 21c:	91 05       	cpc	r25, r1
 21e:	11 f4       	brne	.+4      	; 0x224 <pinChange+0x192>
 220:	df 9a       	sbi	0x1b, 7	; 27
 222:	08 95       	ret
 224:	8a 30       	cpi	r24, 0x0A	; 10
 226:	91 05       	cpc	r25, r1
 228:	11 f4       	brne	.+4      	; 0x22e <pinChange+0x19c>
 22a:	c0 9a       	sbi	0x18, 0	; 24
 22c:	08 95       	ret
 22e:	8b 30       	cpi	r24, 0x0B	; 11
 230:	91 05       	cpc	r25, r1
 232:	11 f4       	brne	.+4      	; 0x238 <pinChange+0x1a6>
 234:	c1 9a       	sbi	0x18, 1	; 24
 236:	08 95       	ret
 238:	8c 30       	cpi	r24, 0x0C	; 12
 23a:	91 05       	cpc	r25, r1
 23c:	11 f4       	brne	.+4      	; 0x242 <pinChange+0x1b0>
 23e:	c2 9a       	sbi	0x18, 2	; 24
 240:	08 95       	ret
 242:	8d 30       	cpi	r24, 0x0D	; 13
 244:	91 05       	cpc	r25, r1
 246:	11 f4       	brne	.+4      	; 0x24c <pinChange+0x1ba>
 248:	c3 9a       	sbi	0x18, 3	; 24
 24a:	08 95       	ret
 24c:	8e 30       	cpi	r24, 0x0E	; 14
 24e:	91 05       	cpc	r25, r1
 250:	11 f4       	brne	.+4      	; 0x256 <pinChange+0x1c4>
 252:	c4 9a       	sbi	0x18, 4	; 24
 254:	08 95       	ret
 256:	8f 30       	cpi	r24, 0x0F	; 15
 258:	91 05       	cpc	r25, r1
 25a:	11 f4       	brne	.+4      	; 0x260 <pinChange+0x1ce>
 25c:	c5 9a       	sbi	0x18, 5	; 24
 25e:	08 95       	ret
 260:	80 31       	cpi	r24, 0x10	; 16
 262:	91 05       	cpc	r25, r1
 264:	11 f4       	brne	.+4      	; 0x26a <pinChange+0x1d8>
 266:	c6 9a       	sbi	0x18, 6	; 24
 268:	08 95       	ret
 26a:	81 31       	cpi	r24, 0x11	; 17
 26c:	91 05       	cpc	r25, r1
 26e:	11 f4       	brne	.+4      	; 0x274 <pinChange+0x1e2>
 270:	c7 9a       	sbi	0x18, 7	; 24
 272:	08 95       	ret
 274:	84 31       	cpi	r24, 0x14	; 20
 276:	91 05       	cpc	r25, r1
 278:	11 f4       	brne	.+4      	; 0x27e <pinChange+0x1ec>
 27a:	a8 9a       	sbi	0x15, 0	; 21
 27c:	08 95       	ret
 27e:	85 31       	cpi	r24, 0x15	; 21
 280:	91 05       	cpc	r25, r1
 282:	11 f4       	brne	.+4      	; 0x288 <pinChange+0x1f6>
 284:	a9 9a       	sbi	0x15, 1	; 21
 286:	08 95       	ret
 288:	86 31       	cpi	r24, 0x16	; 22
 28a:	91 05       	cpc	r25, r1
 28c:	11 f4       	brne	.+4      	; 0x292 <pinChange+0x200>
 28e:	aa 9a       	sbi	0x15, 2	; 21
 290:	08 95       	ret
 292:	87 31       	cpi	r24, 0x17	; 23
 294:	91 05       	cpc	r25, r1
 296:	11 f4       	brne	.+4      	; 0x29c <pinChange+0x20a>
 298:	ab 9a       	sbi	0x15, 3	; 21
 29a:	08 95       	ret
 29c:	88 31       	cpi	r24, 0x18	; 24
 29e:	91 05       	cpc	r25, r1
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <pinChange+0x214>
 2a2:	ac 9a       	sbi	0x15, 4	; 21
 2a4:	08 95       	ret
 2a6:	89 31       	cpi	r24, 0x19	; 25
 2a8:	91 05       	cpc	r25, r1
 2aa:	11 f4       	brne	.+4      	; 0x2b0 <pinChange+0x21e>
 2ac:	ad 9a       	sbi	0x15, 5	; 21
 2ae:	08 95       	ret
 2b0:	8a 31       	cpi	r24, 0x1A	; 26
 2b2:	91 05       	cpc	r25, r1
 2b4:	11 f4       	brne	.+4      	; 0x2ba <pinChange+0x228>
 2b6:	ae 9a       	sbi	0x15, 6	; 21
 2b8:	08 95       	ret
 2ba:	8b 31       	cpi	r24, 0x1B	; 27
 2bc:	91 05       	cpc	r25, r1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <pinChange+0x232>
 2c0:	af 9a       	sbi	0x15, 7	; 21
 2c2:	08 95       	ret
 2c4:	8e 31       	cpi	r24, 0x1E	; 30
 2c6:	91 05       	cpc	r25, r1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <pinChange+0x23c>
 2ca:	90 9a       	sbi	0x12, 0	; 18
 2cc:	08 95       	ret
 2ce:	8f 31       	cpi	r24, 0x1F	; 31
 2d0:	91 05       	cpc	r25, r1
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <pinChange+0x246>
 2d4:	91 9a       	sbi	0x12, 1	; 18
 2d6:	08 95       	ret
 2d8:	80 32       	cpi	r24, 0x20	; 32
 2da:	91 05       	cpc	r25, r1
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <pinChange+0x250>
 2de:	92 9a       	sbi	0x12, 2	; 18
 2e0:	08 95       	ret
 2e2:	81 32       	cpi	r24, 0x21	; 33
 2e4:	91 05       	cpc	r25, r1
 2e6:	11 f4       	brne	.+4      	; 0x2ec <pinChange+0x25a>
 2e8:	93 9a       	sbi	0x12, 3	; 18
 2ea:	08 95       	ret
 2ec:	82 32       	cpi	r24, 0x22	; 34
 2ee:	91 05       	cpc	r25, r1
 2f0:	11 f4       	brne	.+4      	; 0x2f6 <pinChange+0x264>
 2f2:	94 9a       	sbi	0x12, 4	; 18
 2f4:	08 95       	ret
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	91 05       	cpc	r25, r1
 2fa:	11 f4       	brne	.+4      	; 0x300 <pinChange+0x26e>
 2fc:	95 9a       	sbi	0x12, 5	; 18
 2fe:	08 95       	ret
 300:	84 32       	cpi	r24, 0x24	; 36
 302:	91 05       	cpc	r25, r1
 304:	11 f4       	brne	.+4      	; 0x30a <pinChange+0x278>
 306:	96 9a       	sbi	0x12, 6	; 18
 308:	08 95       	ret
 30a:	85 97       	sbiw	r24, 0x25	; 37
 30c:	09 f4       	brne	.+2      	; 0x310 <pinChange+0x27e>
 30e:	97 9a       	sbi	0x12, 7	; 18
 310:	08 95       	ret

00000312 <Lcd4_Port>:
 312:	cf 93       	push	r28
 314:	c8 2f       	mov	r28, r24
 316:	80 ff       	sbrs	r24, 0
 318:	07 c0       	rjmp	.+14     	; 0x328 <Lcd4_Port+0x16>
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	82 e2       	ldi	r24, 0x22	; 34
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 326:	06 c0       	rjmp	.+12     	; 0x334 <Lcd4_Port+0x22>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	82 e2       	ldi	r24, 0x22	; 34
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 334:	c1 ff       	sbrs	r28, 1
 336:	07 c0       	rjmp	.+14     	; 0x346 <Lcd4_Port+0x34>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	83 e2       	ldi	r24, 0x23	; 35
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 344:	06 c0       	rjmp	.+12     	; 0x352 <Lcd4_Port+0x40>
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	83 e2       	ldi	r24, 0x23	; 35
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 352:	c2 ff       	sbrs	r28, 2
 354:	07 c0       	rjmp	.+14     	; 0x364 <Lcd4_Port+0x52>
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	84 e2       	ldi	r24, 0x24	; 36
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 362:	06 c0       	rjmp	.+12     	; 0x370 <Lcd4_Port+0x5e>
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	84 e2       	ldi	r24, 0x24	; 36
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 370:	c3 ff       	sbrs	r28, 3
 372:	07 c0       	rjmp	.+14     	; 0x382 <Lcd4_Port+0x70>
 374:	61 e0       	ldi	r22, 0x01	; 1
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	85 e2       	ldi	r24, 0x25	; 37
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 380:	06 c0       	rjmp	.+12     	; 0x38e <Lcd4_Port+0x7c>
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	85 e2       	ldi	r24, 0x25	; 37
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <Lcd4_Cmd>:
 392:	cf 93       	push	r28
 394:	c8 2f       	mov	r28, r24
 396:	60 e0       	ldi	r22, 0x00	; 0
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	8a e1       	ldi	r24, 0x1A	; 26
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3a2:	8c 2f       	mov	r24, r28
 3a4:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 3a8:	61 e0       	ldi	r22, 0x01	; 1
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	8b e1       	ldi	r24, 0x1B	; 27
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3b4:	89 ef       	ldi	r24, 0xF9	; 249
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <Lcd4_Cmd+0x26>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <Lcd4_Cmd+0x2c>
 3be:	00 00       	nop
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	8b e1       	ldi	r24, 0x1B	; 27
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 3cc:	89 ef       	ldi	r24, 0xF9	; 249
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	01 97       	sbiw	r24, 0x01	; 1
 3d2:	f1 f7       	brne	.-4      	; 0x3d0 <Lcd4_Cmd+0x3e>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <Lcd4_Cmd+0x44>
 3d6:	00 00       	nop
 3d8:	cf 91       	pop	r28
 3da:	08 95       	ret

000003dc <Lcd4_Clear>:
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3e8:	08 95       	ret

000003ea <Lcd4_Set_Cursor>:
 3ea:	cf 93       	push	r28
 3ec:	c6 2f       	mov	r28, r22
 3ee:	81 30       	cpi	r24, 0x01	; 1
 3f0:	59 f4       	brne	.+22     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3f2:	80 e8       	ldi	r24, 0x80	; 128
 3f4:	86 0f       	add	r24, r22
 3f6:	82 95       	swap	r24
 3f8:	8f 70       	andi	r24, 0x0F	; 15
 3fa:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 3fe:	8c 2f       	mov	r24, r28
 400:	8f 70       	andi	r24, 0x0F	; 15
 402:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 406:	0c c0       	rjmp	.+24     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 408:	82 30       	cpi	r24, 0x02	; 2
 40a:	51 f4       	brne	.+20     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 40c:	80 ec       	ldi	r24, 0xC0	; 192
 40e:	86 0f       	add	r24, r22
 410:	82 95       	swap	r24
 412:	8f 70       	andi	r24, 0x0F	; 15
 414:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 418:	8c 2f       	mov	r24, r28
 41a:	8f 70       	andi	r24, 0x0F	; 15
 41c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <Lcd4_Init>:
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 42a:	87 e8       	ldi	r24, 0x87	; 135
 42c:	93 e1       	ldi	r25, 0x13	; 19
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <Lcd4_Init+0xa>
 432:	00 c0       	rjmp	.+0      	; 0x434 <Lcd4_Init+0x10>
 434:	00 00       	nop
 436:	83 e0       	ldi	r24, 0x03	; 3
 438:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 43c:	81 ee       	ldi	r24, 0xE1	; 225
 43e:	94 e0       	ldi	r25, 0x04	; 4
 440:	01 97       	sbiw	r24, 0x01	; 1
 442:	f1 f7       	brne	.-4      	; 0x440 <Lcd4_Init+0x1c>
 444:	00 c0       	rjmp	.+0      	; 0x446 <Lcd4_Init+0x22>
 446:	00 00       	nop
 448:	83 e0       	ldi	r24, 0x03	; 3
 44a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 44e:	8d eb       	ldi	r24, 0xBD	; 189
 450:	9a e0       	ldi	r25, 0x0A	; 10
 452:	01 97       	sbiw	r24, 0x01	; 1
 454:	f1 f7       	brne	.-4      	; 0x452 <Lcd4_Init+0x2e>
 456:	00 c0       	rjmp	.+0      	; 0x458 <Lcd4_Init+0x34>
 458:	00 00       	nop
 45a:	83 e0       	ldi	r24, 0x03	; 3
 45c:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 460:	82 e0       	ldi	r24, 0x02	; 2
 462:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 466:	82 e0       	ldi	r24, 0x02	; 2
 468:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 46c:	88 e0       	ldi	r24, 0x08	; 8
 46e:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 472:	80 e0       	ldi	r24, 0x00	; 0
 474:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 478:	8c e0       	ldi	r24, 0x0C	; 12
 47a:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 484:	86 e0       	ldi	r24, 0x06	; 6
 486:	0e 94 c9 01 	call	0x392	; 0x392 <Lcd4_Cmd>
 48a:	08 95       	ret

0000048c <Lcd4_Write_Char>:
 48c:	cf 93       	push	r28
 48e:	c8 2f       	mov	r28, r24
 490:	61 e0       	ldi	r22, 0x01	; 1
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	8a e1       	ldi	r24, 0x1A	; 26
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 49c:	8c 2f       	mov	r24, r28
 49e:	82 95       	swap	r24
 4a0:	8f 70       	andi	r24, 0x0F	; 15
 4a2:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 4a6:	61 e0       	ldi	r22, 0x01	; 1
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	8b e1       	ldi	r24, 0x1B	; 27
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4b2:	89 ef       	ldi	r24, 0xF9	; 249
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	01 97       	sbiw	r24, 0x01	; 1
 4b8:	f1 f7       	brne	.-4      	; 0x4b6 <Lcd4_Write_Char+0x2a>
 4ba:	00 c0       	rjmp	.+0      	; 0x4bc <Lcd4_Write_Char+0x30>
 4bc:	00 00       	nop
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	70 e0       	ldi	r23, 0x00	; 0
 4c2:	8b e1       	ldi	r24, 0x1B	; 27
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4ca:	89 ef       	ldi	r24, 0xF9	; 249
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <Lcd4_Write_Char+0x42>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <Lcd4_Write_Char+0x48>
 4d4:	00 00       	nop
 4d6:	8c 2f       	mov	r24, r28
 4d8:	8f 70       	andi	r24, 0x0F	; 15
 4da:	0e 94 89 01 	call	0x312	; 0x312 <Lcd4_Port>
 4de:	61 e0       	ldi	r22, 0x01	; 1
 4e0:	70 e0       	ldi	r23, 0x00	; 0
 4e2:	8b e1       	ldi	r24, 0x1B	; 27
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 4ea:	89 ef       	ldi	r24, 0xF9	; 249
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	01 97       	sbiw	r24, 0x01	; 1
 4f0:	f1 f7       	brne	.-4      	; 0x4ee <Lcd4_Write_Char+0x62>
 4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <Lcd4_Write_Char+0x68>
 4f4:	00 00       	nop
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	8b e1       	ldi	r24, 0x1B	; 27
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	0e 94 49 00 	call	0x92	; 0x92 <pinChange>
 502:	89 ef       	ldi	r24, 0xF9	; 249
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	01 97       	sbiw	r24, 0x01	; 1
 508:	f1 f7       	brne	.-4      	; 0x506 <Lcd4_Write_Char+0x7a>
 50a:	00 c0       	rjmp	.+0      	; 0x50c <Lcd4_Write_Char+0x80>
 50c:	00 00       	nop
 50e:	cf 91       	pop	r28
 510:	08 95       	ret

00000512 <Lcd4_Write_String>:
 512:	cf 93       	push	r28
 514:	df 93       	push	r29
 516:	ec 01       	movw	r28, r24
 518:	88 81       	ld	r24, Y
 51a:	88 23       	and	r24, r24
 51c:	31 f0       	breq	.+12     	; 0x52a <Lcd4_Write_String+0x18>
 51e:	21 96       	adiw	r28, 0x01	; 1
 520:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Write_Char>
 524:	89 91       	ld	r24, Y+
 526:	81 11       	cpse	r24, r1
 528:	fb cf       	rjmp	.-10     	; 0x520 <Lcd4_Write_String+0xe>
 52a:	df 91       	pop	r29
 52c:	cf 91       	pop	r28
 52e:	08 95       	ret

00000530 <URAT_SETUP>:
unsigned char cmd6[]={"Not enough balance."};
unsigned char cmd7[]={"RUN"};

void URAT_SETUP(){
	
	UCSRA = 0b00000010;  // Double speed
 530:	82 e0       	ldi	r24, 0x02	; 2
 532:	8b b9       	out	0x0b, r24	; 11
	UCSRB = 0b00011000;  // Enable Tx and Rx, polling
 534:	88 e1       	ldi	r24, 0x18	; 24
 536:	8a b9       	out	0x0a, r24	; 10
	UCSRC = 0b10000110;  // Asynchronous mode, no parity, 1 stop bit,8 data bits
 538:	86 e8       	ldi	r24, 0x86	; 134
 53a:	80 bd       	out	0x20, r24	; 32
	
	UBRRH = 0x00;
 53c:	10 bc       	out	0x20, r1	; 32
	UBRRL = 12; // Baud rate 9600bps, assuming 1MHz clock
 53e:	8c e0       	ldi	r24, 0x0C	; 12
 540:	89 b9       	out	0x09, r24	; 9
 542:	08 95       	ret

00000544 <URAT_RECEIVE>:

}


char URAT_RECEIVE(){
	while ((UCSRA & (1<<RXC)) == 0x00);// Wait until RXC flag is set to logic 1
 544:	5f 9b       	sbis	0x0b, 7	; 11
 546:	fe cf       	rjmp	.-4      	; 0x544 <URAT_RECEIVE>
	char ch= UDR;
 548:	8c b1       	in	r24, 0x0c	; 12
	str[i]=ch;
 54a:	e0 91 e4 00 	lds	r30, 0x00E4	; 0x8000e4 <__data_end>
 54e:	f0 91 e5 00 	lds	r31, 0x00E5	; 0x8000e5 <__data_end+0x1>
 552:	e4 50       	subi	r30, 0x04	; 4
 554:	ff 4f       	sbci	r31, 0xFF	; 255
 556:	80 83       	st	Z, r24
	// Lcd4_Write_Char(ch);
	return ch;
}
 558:	08 95       	ret

0000055a <invalid>:
void invalid(){
	Lcd4_Set_Cursor(1,1);
 55a:	61 e0       	ldi	r22, 0x01	; 1
 55c:	81 e0       	ldi	r24, 0x01	; 1
 55e:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Clear();
 562:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
	Lcd4_Write_String("Invalid card!");
 566:	84 ea       	ldi	r24, 0xA4	; 164
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 56e:	2f e3       	ldi	r18, 0x3F	; 63
 570:	8d e0       	ldi	r24, 0x0D	; 13
 572:	93 e0       	ldi	r25, 0x03	; 3
 574:	21 50       	subi	r18, 0x01	; 1
 576:	80 40       	sbci	r24, 0x00	; 0
 578:	90 40       	sbci	r25, 0x00	; 0
 57a:	e1 f7       	brne	.-8      	; 0x574 <invalid+0x1a>
 57c:	00 c0       	rjmp	.+0      	; 0x57e <invalid+0x24>
 57e:	00 00       	nop
	_delay_ms(1000);
	Lcd4_Set_Cursor(1,1);
 580:	61 e0       	ldi	r22, 0x01	; 1
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Clear();
 588:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
	Lcd4_Write_String("Enter card,pls!");
 58c:	82 eb       	ldi	r24, 0xB2	; 178
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
 594:	08 95       	ret

00000596 <URAT_SEND>:
}


void URAT_SEND(char ch){
	while (! (UCSRA & (1 << UDRE)) );// wait until UDRE flag is set to logic 1
 596:	5d 9b       	sbis	0x0b, 5	; 11
 598:	fe cf       	rjmp	.-4      	; 0x596 <URAT_SEND>
	UDR=ch;
 59a:	8c b9       	out	0x0c, r24	; 12
 59c:	08 95       	ret

0000059e <main>:
	return ;
}
int main(void)
{
	DDRD = 0xFF;
 59e:	8f ef       	ldi	r24, 0xFF	; 255
 5a0:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;
 5a2:	84 bb       	out	0x14, r24	; 20
	URAT_SETUP();
 5a4:	0e 94 98 02 	call	0x530	; 0x530 <URAT_SETUP>
	Lcd4_Init();
 5a8:	0e 94 12 02 	call	0x424	; 0x424 <Lcd4_Init>
	Lcd4_Set_Cursor(1,1);
 5ac:	61 e0       	ldi	r22, 0x01	; 1
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
	Lcd4_Clear();
 5b4:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
	Lcd4_Write_String("Enter card,pls!");
 5b8:	82 eb       	ldi	r24, 0xB2	; 178
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
	while (! (UCSRA & (1 << UDRE)) );// wait until UDRE flag is set to logic 1
	UDR=ch;
	return ;
}
int main(void)
{
 5c0:	a1 2c       	mov	r10, r1
 5c2:	b1 2c       	mov	r11, r1
	while(1)
	{	if(ok==0){
		if(URAT_RECEIVE()=='n'){
		if(URAT_RECEIVE()=='u'){
		if(URAT_RECEIVE()=='m'){
			ok=1;i=0;
 5c4:	88 24       	eor	r8, r8
 5c6:	83 94       	inc	r8
 5c8:	91 2c       	mov	r9, r1
			URAT_RECEIVE();
			i++;
		}
		
		if(i==12){
		str[i]='\0';
 5ca:	0c ef       	ldi	r16, 0xFC	; 252
 5cc:	10 e0       	ldi	r17, 0x00	; 0
 5ce:	c8 e0       	ldi	r28, 0x08	; 8
 5d0:	d1 e0       	ldi	r29, 0x01	; 1
			Lcd4_Write_String("Ticket confirmed!");
		}
		for(j=1;j<12;j++){
			cmd4[j-1]=str[j];
		}
		cmd4[11]='\0';
 5d2:	0f 2e       	mov	r0, r31
 5d4:	f8 ee       	ldi	r31, 0xE8	; 232
 5d6:	ef 2e       	mov	r14, r31
 5d8:	f0 e0       	ldi	r31, 0x00	; 0
 5da:	ff 2e       	mov	r15, r31
 5dc:	f0 2d       	mov	r31, r0
	while (! (UCSRA & (1 << UDRE)) );// wait until UDRE flag is set to logic 1
	UDR=ch;
	return ;
}
int main(void)
{
 5de:	ca 2c       	mov	r12, r10
 5e0:	db 2c       	mov	r13, r11
	Lcd4_Set_Cursor(1,1);
	Lcd4_Clear();
	Lcd4_Write_String("Enter card,pls!");
	int ok=0;
	while(1)
	{	if(ok==0){
 5e2:	c1 14       	cp	r12, r1
 5e4:	d1 04       	cpc	r13, r1
 5e6:	09 f0       	breq	.+2      	; 0x5ea <main+0x4c>
 5e8:	8d c1       	rjmp	.+794    	; 0x904 <__stack+0xa5>
		if(URAT_RECEIVE()=='n'){
 5ea:	0e 94 a2 02 	call	0x544	; 0x544 <URAT_RECEIVE>
 5ee:	8e 36       	cpi	r24, 0x6E	; 110
 5f0:	89 f4       	brne	.+34     	; 0x614 <main+0x76>
		if(URAT_RECEIVE()=='u'){
 5f2:	0e 94 a2 02 	call	0x544	; 0x544 <URAT_RECEIVE>
 5f6:	85 37       	cpi	r24, 0x75	; 117
 5f8:	59 f4       	brne	.+22     	; 0x610 <main+0x72>
		if(URAT_RECEIVE()=='m'){
 5fa:	0e 94 a2 02 	call	0x544	; 0x544 <URAT_RECEIVE>
 5fe:	8d 36       	cpi	r24, 0x6D	; 109
 600:	49 f4       	brne	.+18     	; 0x614 <main+0x76>
			ok=1;i=0;
 602:	a0 92 e4 00 	sts	0x00E4, r10	; 0x8000e4 <__data_end>
 606:	b0 92 e5 00 	sts	0x00E5, r11	; 0x8000e5 <__data_end+0x1>
 60a:	c8 2c       	mov	r12, r8
 60c:	d9 2c       	mov	r13, r9
 60e:	7a c1       	rjmp	.+756    	; 0x904 <__stack+0xa5>
		//invalid();
	
	}
		}
		else{
		invalid();
 610:	0e 94 ad 02 	call	0x55a	; 0x55a <invalid>
		if(ok){
			URAT_RECEIVE();
			i++;
		}
		
		if(i==12){
 614:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <__data_end>
 618:	90 91 e5 00 	lds	r25, 0x00E5	; 0x8000e5 <__data_end+0x1>
 61c:	0c 97       	sbiw	r24, 0x0c	; 12
 61e:	09 f7       	brne	.-62     	; 0x5e2 <main+0x44>
		str[i]='\0';
 620:	f8 01       	movw	r30, r16
 622:	14 86       	std	Z+12, r1	; 0x0c
			Lcd4_Set_Cursor(1,1);
 624:	61 e0       	ldi	r22, 0x01	; 1
 626:	81 e0       	ldi	r24, 0x01	; 1
 628:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
			Lcd4_Clear();
 62c:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
		if(str[0]=='0'){
 630:	f8 01       	movw	r30, r16
 632:	80 81       	ld	r24, Z
 634:	80 33       	cpi	r24, 0x30	; 48
 636:	29 f4       	brne	.+10     	; 0x642 <main+0xa4>
			Lcd4_Write_String("Not enough bal!");}
 638:	82 ec       	ldi	r24, 0xC2	; 194
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
 640:	04 c0       	rjmp	.+8      	; 0x64a <main+0xac>
		else{
			Lcd4_Write_String("Ticket confirmed!");
 642:	82 ed       	ldi	r24, 0xD2	; 210
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
 64a:	ed ef       	ldi	r30, 0xFD	; 253
 64c:	f0 e0       	ldi	r31, 0x00	; 0
 64e:	a8 ee       	ldi	r26, 0xE8	; 232
 650:	b0 e0       	ldi	r27, 0x00	; 0
		}
		for(j=1;j<12;j++){
			cmd4[j-1]=str[j];
 652:	81 91       	ld	r24, Z+
 654:	8d 93       	st	X+, r24
		if(str[0]=='0'){
			Lcd4_Write_String("Not enough bal!");}
		else{
			Lcd4_Write_String("Ticket confirmed!");
		}
		for(j=1;j<12;j++){
 656:	ec 17       	cp	r30, r28
 658:	fd 07       	cpc	r31, r29
 65a:	d9 f7       	brne	.-10     	; 0x652 <main+0xb4>
 65c:	5f c1       	rjmp	.+702    	; 0x91c <__stack+0xbd>
			cmd4[j-1]=str[j];
		}
		cmd4[11]='\0';
		
		for(j=0;j<2;j++){
			URAT_SEND(cmd1[j]);
 65e:	fc 01       	movw	r30, r24
 660:	ef 55       	subi	r30, 0x5F	; 95
 662:	ff 4f       	sbci	r31, 0xFF	; 255
 664:	80 81       	ld	r24, Z
 666:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 66a:	83 ed       	ldi	r24, 0xD3	; 211
 66c:	90 e3       	ldi	r25, 0x30	; 48
 66e:	01 97       	sbiw	r24, 0x01	; 1
 670:	f1 f7       	brne	.-4      	; 0x66e <main+0xd0>
 672:	00 c0       	rjmp	.+0      	; 0x674 <main+0xd6>
 674:	00 00       	nop
		for(j=1;j<12;j++){
			cmd4[j-1]=str[j];
		}
		cmd4[11]='\0';
		
		for(j=0;j<2;j++){
 676:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <j>
 67a:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <j+0x1>
 67e:	01 96       	adiw	r24, 0x01	; 1
 680:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <j+0x1>
 684:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <j>
 688:	82 30       	cpi	r24, 0x02	; 2
 68a:	91 05       	cpc	r25, r1
 68c:	44 f3       	brlt	.-48     	; 0x65e <main+0xc0>
			URAT_SEND(cmd1[j]);
			_delay_ms(50);
	}
		URAT_SEND('\r');
 68e:	8d e0       	ldi	r24, 0x0D	; 13
 690:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 694:	9f e3       	ldi	r25, 0x3F	; 63
 696:	ed e0       	ldi	r30, 0x0D	; 13
 698:	f3 e0       	ldi	r31, 0x03	; 3
 69a:	91 50       	subi	r25, 0x01	; 1
 69c:	e0 40       	sbci	r30, 0x00	; 0
 69e:	f0 40       	sbci	r31, 0x00	; 0
 6a0:	e1 f7       	brne	.-8      	; 0x69a <main+0xfc>
 6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <main+0x106>
 6a4:	00 00       	nop
		_delay_ms(1000);
		for(j=0;j<9;j++){
 6a6:	a0 92 e6 00 	sts	0x00E6, r10	; 0x8000e6 <j>
 6aa:	b0 92 e7 00 	sts	0x00E7, r11	; 0x8000e7 <j+0x1>
 6ae:	8a 2d       	mov	r24, r10
 6b0:	9b 2d       	mov	r25, r11
			URAT_SEND(cmd2[j]);
 6b2:	fc 01       	movw	r30, r24
 6b4:	e9 56       	subi	r30, 0x69	; 105
 6b6:	ff 4f       	sbci	r31, 0xFF	; 255
 6b8:	80 81       	ld	r24, Z
 6ba:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 6be:	83 ed       	ldi	r24, 0xD3	; 211
 6c0:	90 e3       	ldi	r25, 0x30	; 48
 6c2:	01 97       	sbiw	r24, 0x01	; 1
 6c4:	f1 f7       	brne	.-4      	; 0x6c2 <main+0x124>
 6c6:	00 c0       	rjmp	.+0      	; 0x6c8 <main+0x12a>
 6c8:	00 00       	nop
			URAT_SEND(cmd1[j]);
			_delay_ms(50);
	}
		URAT_SEND('\r');
		_delay_ms(1000);
		for(j=0;j<9;j++){
 6ca:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <j>
 6ce:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <j+0x1>
 6d2:	01 96       	adiw	r24, 0x01	; 1
 6d4:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <j+0x1>
 6d8:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <j>
 6dc:	89 30       	cpi	r24, 0x09	; 9
 6de:	91 05       	cpc	r25, r1
 6e0:	44 f3       	brlt	.-48     	; 0x6b2 <main+0x114>
			URAT_SEND(cmd2[j]);
			_delay_ms(50);
	}
		URAT_SEND('\r');
 6e2:	8d e0       	ldi	r24, 0x0D	; 13
 6e4:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 6e8:	9f e3       	ldi	r25, 0x3F	; 63
 6ea:	ed e0       	ldi	r30, 0x0D	; 13
 6ec:	f3 e0       	ldi	r31, 0x03	; 3
 6ee:	91 50       	subi	r25, 0x01	; 1
 6f0:	e0 40       	sbci	r30, 0x00	; 0
 6f2:	f0 40       	sbci	r31, 0x00	; 0
 6f4:	e1 f7       	brne	.-8      	; 0x6ee <main+0x150>
 6f6:	00 c0       	rjmp	.+0      	; 0x6f8 <main+0x15a>
 6f8:	00 00       	nop
		_delay_ms(1000);
		
		for(j=0;j<12;j++){
 6fa:	a0 92 e6 00 	sts	0x00E6, r10	; 0x8000e6 <j>
 6fe:	b0 92 e7 00 	sts	0x00E7, r11	; 0x8000e7 <j+0x1>
 702:	8a 2d       	mov	r24, r10
 704:	9b 2d       	mov	r25, r11
			URAT_SEND(cmd3[j]);
 706:	fc 01       	movw	r30, r24
 708:	e6 57       	subi	r30, 0x76	; 118
 70a:	ff 4f       	sbci	r31, 0xFF	; 255
 70c:	80 81       	ld	r24, Z
 70e:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 712:	83 ed       	ldi	r24, 0xD3	; 211
 714:	90 e3       	ldi	r25, 0x30	; 48
 716:	01 97       	sbiw	r24, 0x01	; 1
 718:	f1 f7       	brne	.-4      	; 0x716 <main+0x178>
 71a:	00 c0       	rjmp	.+0      	; 0x71c <main+0x17e>
 71c:	00 00       	nop
			_delay_ms(50);
	}
		URAT_SEND('\r');
		_delay_ms(1000);
		
		for(j=0;j<12;j++){
 71e:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <j>
 722:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <j+0x1>
 726:	01 96       	adiw	r24, 0x01	; 1
 728:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <j+0x1>
 72c:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <j>
 730:	8c 30       	cpi	r24, 0x0C	; 12
 732:	91 05       	cpc	r25, r1
 734:	44 f3       	brlt	.-48     	; 0x706 <main+0x168>
			URAT_SEND(cmd3[j]);
			_delay_ms(50);
		}
		for(j=0;j<11;j++){
 736:	a0 92 e6 00 	sts	0x00E6, r10	; 0x8000e6 <j>
 73a:	b0 92 e7 00 	sts	0x00E7, r11	; 0x8000e7 <j+0x1>
 73e:	8a 2d       	mov	r24, r10
 740:	9b 2d       	mov	r25, r11
			URAT_SEND(cmd4[j]);
 742:	fc 01       	movw	r30, r24
 744:	e8 51       	subi	r30, 0x18	; 24
 746:	ff 4f       	sbci	r31, 0xFF	; 255
 748:	80 81       	ld	r24, Z
 74a:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 74e:	e3 ed       	ldi	r30, 0xD3	; 211
 750:	f0 e3       	ldi	r31, 0x30	; 48
 752:	31 97       	sbiw	r30, 0x01	; 1
 754:	f1 f7       	brne	.-4      	; 0x752 <main+0x1b4>
 756:	00 c0       	rjmp	.+0      	; 0x758 <main+0x1ba>
 758:	00 00       	nop
		
		for(j=0;j<12;j++){
			URAT_SEND(cmd3[j]);
			_delay_ms(50);
		}
		for(j=0;j<11;j++){
 75a:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <j>
 75e:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <j+0x1>
 762:	01 96       	adiw	r24, 0x01	; 1
 764:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <j+0x1>
 768:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <j>
 76c:	8b 30       	cpi	r24, 0x0B	; 11
 76e:	91 05       	cpc	r25, r1
 770:	44 f3       	brlt	.-48     	; 0x742 <main+0x1a4>
			URAT_SEND(cmd4[j]);
			_delay_ms(50);
		}
		URAT_SEND('\"');
 772:	82 e2       	ldi	r24, 0x22	; 34
 774:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 778:	83 ed       	ldi	r24, 0xD3	; 211
 77a:	90 e3       	ldi	r25, 0x30	; 48
 77c:	01 97       	sbiw	r24, 0x01	; 1
 77e:	f1 f7       	brne	.-4      	; 0x77c <main+0x1de>
 780:	00 c0       	rjmp	.+0      	; 0x782 <main+0x1e4>
 782:	00 00       	nop
		_delay_ms(50);
		URAT_SEND('\r');
 784:	8d e0       	ldi	r24, 0x0D	; 13
 786:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 78a:	9f e3       	ldi	r25, 0x3F	; 63
 78c:	ed e0       	ldi	r30, 0x0D	; 13
 78e:	f3 e0       	ldi	r31, 0x03	; 3
 790:	91 50       	subi	r25, 0x01	; 1
 792:	e0 40       	sbci	r30, 0x00	; 0
 794:	f0 40       	sbci	r31, 0x00	; 0
 796:	e1 f7       	brne	.-8      	; 0x790 <main+0x1f2>
 798:	00 c0       	rjmp	.+0      	; 0x79a <main+0x1fc>
 79a:	00 00       	nop
		_delay_ms(1000);
		
		if(str[0]=='0'){
 79c:	f8 01       	movw	r30, r16
 79e:	80 81       	ld	r24, Z
 7a0:	80 33       	cpi	r24, 0x30	; 48
 7a2:	a1 f5       	brne	.+104    	; 0x80c <main+0x26e>
		//Lcd4_Write_String("Not enough bal!");
		for(j=0;j<19;j++){
 7a4:	a0 92 e6 00 	sts	0x00E6, r10	; 0x8000e6 <j>
 7a8:	b0 92 e7 00 	sts	0x00E7, r11	; 0x8000e7 <j+0x1>
 7ac:	8a 2d       	mov	r24, r10
 7ae:	9b 2d       	mov	r25, r11
			URAT_SEND(cmd6[j]);
 7b0:	fc 01       	movw	r30, r24
 7b2:	ec 59       	subi	r30, 0x9C	; 156
 7b4:	ff 4f       	sbci	r31, 0xFF	; 255
 7b6:	80 81       	ld	r24, Z
 7b8:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 7bc:	83 ed       	ldi	r24, 0xD3	; 211
 7be:	90 e3       	ldi	r25, 0x30	; 48
 7c0:	01 97       	sbiw	r24, 0x01	; 1
 7c2:	f1 f7       	brne	.-4      	; 0x7c0 <main+0x222>
 7c4:	00 c0       	rjmp	.+0      	; 0x7c6 <main+0x228>
 7c6:	00 00       	nop
		URAT_SEND('\r');
		_delay_ms(1000);
		
		if(str[0]=='0'){
		//Lcd4_Write_String("Not enough bal!");
		for(j=0;j<19;j++){
 7c8:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <j>
 7cc:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <j+0x1>
 7d0:	01 96       	adiw	r24, 0x01	; 1
 7d2:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <j+0x1>
 7d6:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <j>
 7da:	83 31       	cpi	r24, 0x13	; 19
 7dc:	91 05       	cpc	r25, r1
 7de:	44 f3       	brlt	.-48     	; 0x7b0 <main+0x212>
			URAT_SEND(cmd6[j]);
			_delay_ms(50);
		}
		URAT_SEND(0x1a);
 7e0:	8a e1       	ldi	r24, 0x1A	; 26
 7e2:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 7e6:	e3 ed       	ldi	r30, 0xD3	; 211
 7e8:	f0 e3       	ldi	r31, 0x30	; 48
 7ea:	31 97       	sbiw	r30, 0x01	; 1
 7ec:	f1 f7       	brne	.-4      	; 0x7ea <main+0x24c>
 7ee:	00 c0       	rjmp	.+0      	; 0x7f0 <main+0x252>
 7f0:	00 00       	nop
		_delay_ms(50);
		URAT_SEND('\r');
 7f2:	8d e0       	ldi	r24, 0x0D	; 13
 7f4:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 7f8:	ff e3       	ldi	r31, 0x3F	; 63
 7fa:	2d e0       	ldi	r18, 0x0D	; 13
 7fc:	83 e0       	ldi	r24, 0x03	; 3
 7fe:	f1 50       	subi	r31, 0x01	; 1
 800:	20 40       	sbci	r18, 0x00	; 0
 802:	80 40       	sbci	r24, 0x00	; 0
 804:	e1 f7       	brne	.-8      	; 0x7fe <main+0x260>
 806:	00 c0       	rjmp	.+0      	; 0x808 <main+0x26a>
 808:	00 00       	nop
 80a:	33 c0       	rjmp	.+102    	; 0x872 <__stack+0x13>
		_delay_ms(1000);
		}
		else{
		//Lcd4_Write_String("Ticket confirmed!");
		for(j=0;j<17;j++){
 80c:	a0 92 e6 00 	sts	0x00E6, r10	; 0x8000e6 <j>
 810:	b0 92 e7 00 	sts	0x00E7, r11	; 0x8000e7 <j+0x1>
 814:	8a 2d       	mov	r24, r10
 816:	9b 2d       	mov	r25, r11
			URAT_SEND(cmd5[j]);
 818:	fc 01       	movw	r30, r24
 81a:	e8 58       	subi	r30, 0x88	; 136
 81c:	ff 4f       	sbci	r31, 0xFF	; 255
 81e:	80 81       	ld	r24, Z
 820:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 824:	e3 ed       	ldi	r30, 0xD3	; 211
 826:	f0 e3       	ldi	r31, 0x30	; 48
 828:	31 97       	sbiw	r30, 0x01	; 1
 82a:	f1 f7       	brne	.-4      	; 0x828 <main+0x28a>
 82c:	00 c0       	rjmp	.+0      	; 0x82e <main+0x290>
 82e:	00 00       	nop
		URAT_SEND('\r');
		_delay_ms(1000);
		}
		else{
		//Lcd4_Write_String("Ticket confirmed!");
		for(j=0;j<17;j++){
 830:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <j>
 834:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <j+0x1>
 838:	01 96       	adiw	r24, 0x01	; 1
 83a:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <j+0x1>
 83e:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <j>
 842:	81 31       	cpi	r24, 0x11	; 17
 844:	91 05       	cpc	r25, r1
 846:	44 f3       	brlt	.-48     	; 0x818 <main+0x27a>
			URAT_SEND(cmd5[j]);
			_delay_ms(50);
	}URAT_SEND(0x1a);
 848:	8a e1       	ldi	r24, 0x1A	; 26
 84a:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 84e:	83 ed       	ldi	r24, 0xD3	; 211
 850:	90 e3       	ldi	r25, 0x30	; 48
 852:	01 97       	sbiw	r24, 0x01	; 1
 854:	f1 f7       	brne	.-4      	; 0x852 <main+0x2b4>
 856:	00 c0       	rjmp	.+0      	; 0x858 <main+0x2ba>
 858:	00 00       	nop
	_delay_ms(50);
		URAT_SEND('\r');
 85a:	8d e0       	ldi	r24, 0x0D	; 13
 85c:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 860:	9f e3       	ldi	r25, 0x3F	; 63
 862:	ed e0       	ldi	r30, 0x0D	; 13
 864:	f3 e0       	ldi	r31, 0x03	; 3
 866:	91 50       	subi	r25, 0x01	; 1
 868:	e0 40       	sbci	r30, 0x00	; 0
 86a:	f0 40       	sbci	r31, 0x00	; 0
 86c:	e1 f7       	brne	.-8      	; 0x866 <__stack+0x7>
 86e:	00 c0       	rjmp	.+0      	; 0x870 <__stack+0x11>
 870:	00 00       	nop
		_delay_ms(1000);
		
		}
		for(j=0;j<3;j++){
 872:	a0 92 e6 00 	sts	0x00E6, r10	; 0x8000e6 <j>
 876:	b0 92 e7 00 	sts	0x00E7, r11	; 0x8000e7 <j+0x1>
 87a:	8a 2d       	mov	r24, r10
 87c:	9b 2d       	mov	r25, r11
			URAT_SEND(cmd7[j]);
 87e:	fc 01       	movw	r30, r24
 880:	e0 5a       	subi	r30, 0xA0	; 160
 882:	ff 4f       	sbci	r31, 0xFF	; 255
 884:	80 81       	ld	r24, Z
 886:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 88a:	83 ed       	ldi	r24, 0xD3	; 211
 88c:	90 e3       	ldi	r25, 0x30	; 48
 88e:	01 97       	sbiw	r24, 0x01	; 1
 890:	f1 f7       	brne	.-4      	; 0x88e <__stack+0x2f>
 892:	00 c0       	rjmp	.+0      	; 0x894 <__stack+0x35>
 894:	00 00       	nop
	_delay_ms(50);
		URAT_SEND('\r');
		_delay_ms(1000);
		
		}
		for(j=0;j<3;j++){
 896:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <j>
 89a:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <j+0x1>
 89e:	01 96       	adiw	r24, 0x01	; 1
 8a0:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <j+0x1>
 8a4:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <j>
 8a8:	83 30       	cpi	r24, 0x03	; 3
 8aa:	91 05       	cpc	r25, r1
 8ac:	44 f3       	brlt	.-48     	; 0x87e <__stack+0x1f>
			URAT_SEND(cmd7[j]);
			_delay_ms(50);
	}
		URAT_SEND('\r');
 8ae:	8d e0       	ldi	r24, 0x0D	; 13
 8b0:	0e 94 cb 02 	call	0x596	; 0x596 <URAT_SEND>
 8b4:	9f e3       	ldi	r25, 0x3F	; 63
 8b6:	ed e0       	ldi	r30, 0x0D	; 13
 8b8:	f3 e0       	ldi	r31, 0x03	; 3
 8ba:	91 50       	subi	r25, 0x01	; 1
 8bc:	e0 40       	sbci	r30, 0x00	; 0
 8be:	f0 40       	sbci	r31, 0x00	; 0
 8c0:	e1 f7       	brne	.-8      	; 0x8ba <__stack+0x5b>
 8c2:	00 c0       	rjmp	.+0      	; 0x8c4 <__stack+0x65>
 8c4:	00 00       	nop
		_delay_ms(1000);
		
		//Lcd4_Write_String(str);
		i=0; 
 8c6:	a0 92 e4 00 	sts	0x00E4, r10	; 0x8000e4 <__data_end>
 8ca:	b0 92 e5 00 	sts	0x00E5, r11	; 0x8000e5 <__data_end+0x1>
 8ce:	2f e3       	ldi	r18, 0x3F	; 63
 8d0:	82 e4       	ldi	r24, 0x42	; 66
 8d2:	9f e0       	ldi	r25, 0x0F	; 15
 8d4:	21 50       	subi	r18, 0x01	; 1
 8d6:	80 40       	sbci	r24, 0x00	; 0
 8d8:	90 40       	sbci	r25, 0x00	; 0
 8da:	e1 f7       	brne	.-8      	; 0x8d4 <__stack+0x75>
 8dc:	00 c0       	rjmp	.+0      	; 0x8de <__stack+0x7f>
 8de:	00 00       	nop
		_delay_ms(5000);
		Lcd4_Set_Cursor(1,1);
 8e0:	61 e0       	ldi	r22, 0x01	; 1
 8e2:	81 e0       	ldi	r24, 0x01	; 1
 8e4:	0e 94 f5 01 	call	0x3ea	; 0x3ea <Lcd4_Set_Cursor>
		Lcd4_Clear();
 8e8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Lcd4_Clear>
		Lcd4_Write_String("Enter card,pls!");
 8ec:	82 eb       	ldi	r24, 0xB2	; 178
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	0e 94 89 02 	call	0x512	; 0x512 <Lcd4_Write_String>
		str[i]='\0';
 8f4:	e0 91 e4 00 	lds	r30, 0x00E4	; 0x8000e4 <__data_end>
 8f8:	f0 91 e5 00 	lds	r31, 0x00E5	; 0x8000e5 <__data_end+0x1>
 8fc:	e4 50       	subi	r30, 0x04	; 4
 8fe:	ff 4f       	sbci	r31, 0xFF	; 255
 900:	10 82       	st	Z, r1
 902:	6d ce       	rjmp	.-806    	; 0x5de <main+0x40>
		Lcd4_Set_Cursor(1,1);
		Lcd4_Clear();
		Lcd4_Write_String("Enter card,pls!");*/
		}
		if(ok){
			URAT_RECEIVE();
 904:	0e 94 a2 02 	call	0x544	; 0x544 <URAT_RECEIVE>
			i++;
 908:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <__data_end>
 90c:	90 91 e5 00 	lds	r25, 0x00E5	; 0x8000e5 <__data_end+0x1>
 910:	01 96       	adiw	r24, 0x01	; 1
 912:	90 93 e5 00 	sts	0x00E5, r25	; 0x8000e5 <__data_end+0x1>
 916:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__data_end>
 91a:	7c ce       	rjmp	.-776    	; 0x614 <main+0x76>
			Lcd4_Write_String("Ticket confirmed!");
		}
		for(j=1;j<12;j++){
			cmd4[j-1]=str[j];
		}
		cmd4[11]='\0';
 91c:	f7 01       	movw	r30, r14
 91e:	13 86       	std	Z+11, r1	; 0x0b
		
		for(j=0;j<2;j++){
 920:	a0 92 e6 00 	sts	0x00E6, r10	; 0x8000e6 <j>
 924:	b0 92 e7 00 	sts	0x00E7, r11	; 0x8000e7 <j+0x1>
 928:	8a 2d       	mov	r24, r10
 92a:	9b 2d       	mov	r25, r11
 92c:	98 ce       	rjmp	.-720    	; 0x65e <main+0xc0>

0000092e <_exit>:
 92e:	f8 94       	cli

00000930 <__stop_program>:
 930:	ff cf       	rjmp	.-2      	; 0x930 <__stop_program>
